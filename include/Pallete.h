#pragma once

#include <SDL2/SDL.h>

// https://lospec.com/palette-list/sweetie-16
// const SDL_Color palette[16] = {
//     {0x1a, 0x1c, 0x2c, 0xff}, {0x5d, 0x27, 0x5d, 0xff},
//     {0xb1, 0x3e, 0x53, 0xff}, {0xef, 0x7d, 0x57, 0xff},
//     {0xff, 0xcd, 0x75, 0xff}, {0xa7, 0xf0, 0x70, 0xff},
//     {0x38, 0xb7, 0x64, 0xff}, {0x25, 0x71, 0x79, 0xff},
//     {0x29, 0x36, 0x6f, 0xff}, {0x3b, 0x5d, 0xc9, 0xff},
//     {0x41, 0xa6, 0xf6, 0xff}, {0x73, 0xef, 0xf7, 0xff},
//     {0xf4, 0xf4, 0xf4, 0xff}, {0x94, 0xb0, 0xc2, 0xff},
//     {0x56, 0x6c, 0x86, 0xff}, {0x33, 0x3c, 0x57, 0xff},
// };

class Pallete {
public:
  void render(int x, int y);
};


void Pallete::render(int x, int y){
  // SDL_Renderer *renderer = Renderer::getInstance().getRenderer();
  //
  // int posX = x;
  // int posY = y;
  // int size = 16;
  //
  // for (int x = 0; x < 4; x++) {
  //   for (int y = 0; y < 4; y++) {
  //     SDL_Rect rect = {x * size + posX, y * size + posY, size, size};
  //     int i = y * 4 + x;
  //     SDL_SetRenderDrawColor(renderer, palette[i].r, palette[i].g, palette[i].b,
  //                             palette[i].a);
  //     SDL_RenderFillRect(renderer, &rect);
  //   }
  // }
}
